Projeto com 4 classes:
	(+) ServidorCentral
	(+) Interface
	(+) PeerToPeer (arquivo Peer.py)
	(+) RichTextOnTerminal: Essa classe é só para formatar o texto no terminal (cores, negrito e tal)

A classe Usuário, quebrei em 2: Interface e PeerToPeer
	(+) Interface faz a comunicação com ServidorCentral e aguarda comandos do usuário
	(+) PeerToPeer têm todo o código que faz a comunicação p2p com os outros pares

Dá pra juntar tudo numa só e criar somente Usuário.
Na real, PeerToPeer é quase uma subclasse de Usuário pela quantidade de argumentos iguais
no construtor. Mas quebrei em 2, porque na minha opinião fica mais facil organizar, documentar
e implementar.
Mas podemos juntar tudo até a entrega e melhorar. 

Para testar o código:
	1. Setar um HOSTSC,PORTASC no main do ServidorCentral
	2. Setar o mesmo HOSTSC,PORTASC no main de Interface para fazer os dois se comunicarem
	3. Setar um host,porta no main da Interface para se colocar em modo de escuta, para aceitar comunicação de outros peers
	(!) Se for abrir vários chats diferentes no mesmo computador sob usernames diferentes, a porta em (3) deve ser mudada,
	já que a interface representa a aplicação final e cada aplicação deve se manter em escuta (ser um servidor de pares)
	em portas distintas.
	(!) A classe Peer é instanciada internamente na Interface para lidar com a comunicação p2p
	4. Executar o ServidorCentral e depois as Interfaces no Python3
		python3 ServidorCentral.py	
		python3 Interface.py